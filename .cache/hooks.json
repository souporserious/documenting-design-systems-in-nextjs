[{"name":"useComponent","slug":"use-component","path":"/Users/travisarnold/Code/nextjs-live-examples/hooks/use-component.ts","description":"Execute a string of code and return the default export.\nSupports TypeScript and JSX syntax.","examples":[{"code":"import { useComponent } from 'hooks'\n\nexport default function BasicUsage() {\n  const Component = useComponent(`exports.default = () => require('react').createElement('div', null, 'Hello World')`)\n  return <Component />\n}","compiledCode":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = BasicUsage;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _hooks = require(\"hooks\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction BasicUsage() {\n    var Component = (0, _hooks).useComponent(\"exports.default = () => require('react').createElement('div', null, 'Hello World')\");\n    return(/*#__PURE__*/ _react.default.createElement(Component, null));\n}\n"}]},{"name":"useHover","slug":"use-hover","path":"/Users/travisarnold/Code/nextjs-live-examples/hooks/use-hover.ts","description":"Provides state and event handlers for listening to hover events.","examples":[{"code":"import { useHover } from 'hooks'\n\nexport default function BasicUsage() {\n  const [hover, hoverProps] = useHover()\n  return (\n    <div {...hoverProps}>\n      Hover me! {hover ? 'Hovered' : 'Not hovered'}\n    </div>\n  )\n}","compiledCode":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = BasicUsage;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _hooks = require(\"hooks\");\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction BasicUsage() {\n    var ref = _slicedToArray((0, _hooks).useHover(), 2), hover = ref[0], hoverProps = ref[1];\n    return(/*#__PURE__*/ _react.default.createElement(\"div\", _extends({\n    }, hoverProps), \"Hover me! \", hover ? 'Hovered' : 'Not hovered'));\n}\n"}]}]